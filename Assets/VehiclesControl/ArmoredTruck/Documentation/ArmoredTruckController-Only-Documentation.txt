"ArmoredTruckDevScene" Scene Setup Steps
-----------------------------------------------------------------------------------


Prep Step: Create New Scene Called: "ArmoredTruckDevScene"


-----------------------------------------------------------------------------------

Note: if you already have some sort of a test terrain in place, well then, you
can simple skip the steps: #1, 2 & 3 and go directly to #4.

-----------------------------------------------------------------------------------

Step 1: Create: "Environment" * (for Nicer Organization)

-----------------------------------------------------------------------------------


Create Empty: "Environment"

Position: X: 0 Y: 0 Z: 0 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

First since this is just a "holder" added for better organization, let us go
ahead & drag the "Directional Light" into "Environment".

* also if you wanted you could add a "dir" called Environment and opt to place
  your TerrainData inside that in its own Dir "TerrainData" and as such any
  other Environment stuff respectively in as desired the "Environment" dir.
  Just a suggestion.

Also: We don't need the "Main Camera" in Sample Scene, so..., we can go ahead
and delete it.


-----------------------------------------------------------------------------------

Step 2: Create: "Terrain Plane"

-----------------------------------------------------------------------------------


Create New 3D Object: "Plane"

Position: X: 0   Y: -0.03 Z: 0 
Rotation: X: 0   Y: 0     Z: 0 
Scale:    X: 100 Y: 1     Z: 100

Rename to: "Terrain Plane"

We can now opt to clean up for better organization, simply drag the:
"Terrain Plane" into the holder "Environment" we added for just this exact
 purpose!


-----------------------------------------------------------------------------------

Step 3: Create: "Terrain"

-----------------------------------------------------------------------------------


Create New 3D Object: "Terrain"

Modify via:

"Terrain" Inspector: Terrain Settings

Position: X: -500 Y: 0 Z: -500 
Rotation: X: 0     Y: 0 Z: 0 
Scale:    X: 1     Y: 1 Z: 1

We can now opt to clean up for better organization, simply drag the:
"Terrain" into the holder "Environment" we added for just this exact purpose!


-----------------------------------------------------------------------------------

Step 4: Create: empty "Vehicle"

-----------------------------------------------------------------------------------


Create Empty: "Vehicle"

Position: X: 0 Y: 0 Z: 0 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1


-----------------------------------------------------------------------------------

Notes: Current Summary

-----------------------------------------------------------------------------------


Note: Ok, by now your scene heirarchy at top should look like this:

Environment
Vehicle


Nice and organized right?! :) Good Stuff! ;)

Note: as this uses a vehicle from such and due to licensing such vehicles
cannot be included in this repository obviously, as such the provided scripts
and instructions thus require having / purchasing the:

Synty Polygon Battle Royale Asset:
https://assetstore.unity.com/packages/3d/environments/urban/polygon-battle-royale-low-poly-3d-art-by-synty-128513


-----------------------------------------------------------------------------------

Step 5: Install: "Synty Polygon Battle Royal Asset"

-----------------------------------------------------------------------------------


Depending on how you purchased you can either use the package manager to
install the asset or if you are like me and say already have local repository
storage of purchased assets and have the package already you can install the
asset manually.

Asset package to install:

 POLYGON Battle Royale - Low Poly 3D Art by Synty.unitypackage

Purchase Synty Polygon Battle Royale Asset:
https://assetstore.unity.com/packages/3d/environments/urban/polygon-battle-royale-low-poly-3d-art-by-synty-128513


-----------------------------------------------------------------------------------

Step 6: Identify: the "Vehicle Prefab"

-----------------------------------------------------------------------------------


Let us first identify and locate the "Vehicle Prefab" we are going to use.

Assets > PolygonBattleRoyale > Prefabs > Vehicles

SM_Veh_Armored_Car_01


-----------------------------------------------------------------------------------

Step 7: Add: the "Vehicle Prefab" to Scene

-----------------------------------------------------------------------------------


Drag the mentioned "Vehicle Prefab" into the scene & unpack the prefab completely.

Next, rename the vehicle prefabs:

SM_Veh_Armored_Car_01 => "Armored Truck"

Next, set the Transform:

Position: X: 0 Y: 0 Z: 0 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

Then move "ArmoredTruck" into the empty: "Vehicle" as child of.


-----------------------------------------------------------------------------------

Step 8: Add: empty "View" as child

-----------------------------------------------------------------------------------


In "ArmoredTruck" add empty as child named "View"

Set the Transform of "View":

Position: X: 0 Y: 0 Z: 0 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1


-----------------------------------------------------------------------------------

Step 9: Add: "Camera" in empty "View" as child

-----------------------------------------------------------------------------------


In the empty: "View" add "Camera" component named: "ArmoredTruckCamera"

Tag: Untagged

Depth: 0

Set the Transform of "ArmoredTruckCamera":

Position: X: 0 Y: 1.4 Z: -6.4 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1


-----------------------------------------------------------------------------------

Step 10: Add: empty "WheelMeshes" as child

-----------------------------------------------------------------------------------


In "ArmoredTruck" add empty as child named "WheelMeshes"

Set the Transform of "WheelMeshes":

Position: X: 0 Y: 0 Z: 0 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

Copy & paste the following meshes into "WheelMeshes" as children
(delete originals after as they are not needed since we copied them into new
location)

SM_Veh_Armored_Car_Wheel_fl
SM_Veh_Armored_Car_Wheel_fr
SM_Veh_Armored_Car_Wheel_rl
SM_Veh_Armored_Car_Wheel_rr

Transforms should be fine and unaffected but, let us just mention them for
good measure.

SM_Veh_Armored_Car_Wheel_fl
---------------------------

Position: X: -0.9126655 Y: 0.5421047 Z: 1.730696 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

SM_Veh_Armored_Car_Wheel_fr
---------------------------

Position: X: 0.9126655 Y: 0.5421047 Z: 1.730696 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

SM_Veh_Armored_Car_Wheel_rl
---------------------------

Position: X: -1.048778 Y: 0.5421047 Z: -1.581318 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

SM_Veh_Armored_Car_Wheel_rr
---------------------------

Position: X: 1.048778 Y: 0.5421047 Z: -1.581318
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1


-----------------------------------------------------------------------------------

Step 11: Duplicate: empty "WheelMeshes" as "WheelColliders"

-----------------------------------------------------------------------------------


In "ArmoredTruck" duplicate "WheelMeshes" & rename to "WheelColliders"

Set the Transform of "WheelColliders":

Position: X: 0 Y: 0 Z: 0 
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1


Since you duplicated "WheelMeshes" & renamed to "WheelColliders" there should
be the children already present with matching infos...

SM_Veh_Armored_Car_Wheel_fl
SM_Veh_Armored_Car_Wheel_fr
SM_Veh_Armored_Car_Wheel_rl
SM_Veh_Armored_Car_Wheel_rr


Prior to the deletion of contents in WheelColliders if you desired to
determine the wheel radius so as to eventually use with Wheel Colliders well,
you could attach a Sphere Collider and gain Radius from that and then delete
the sphere collider after as such would no longer be necessary but instead to
avoid needing to do such I will provide that info so you do not necessarily
need to do so.

These details are important:


Front Wheels:
-------------

Front Wheels Collider Radius: 0.5407741
Front Wheels Collider Position Y: 0.6907741 (0.5407741+0.15) *

* Wheel colliders need +0.15 on the Y to function as intended as per
  documentation

Rear Wheels:
------------

Rear Wheels Collider Radius: 0.5407741
Rear Wheels Collider Position Y: 0.6907741 (0.5407741+0.15) *

* Wheel colliders need +0.15 on the Y to function as intended as per
  documentation

In "WheelColliders" children: * (since all are already present in WheelMeshes
and not needed for Wheel Colliders)

* Delete Mesh Filter
* Delete Mesh Renderer

Add Component "Wheel Collider" to each:

SM_Veh_Armored_Car_Wheel_fl
SM_Veh_Armored_Car_Wheel_fr
SM_Veh_Armored_Car_Wheel_rl
SM_Veh_Armored_Car_Wheel_rr

Set both front "Wheel Colliders" radius: 0.5407741
Set both rear  "Wheel Colliders" radius: 0.5407741

We will need to now edit these infos:


SM_Veh_Armored_Car_Wheel_fl
---------------------------

Position: X: -0.9126655 Y: 0.6907741 Z: 1.730696
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

SM_Veh_Armored_Car_Wheel_fr
---------------------------

Position: X: 0.9126655 Y: 0.6907741 Z: 1.730696
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

SM_Veh_Armored_Car_Wheel_rl
---------------------------

Position: X: -1.048778 Y: 0.6907741 Z: -1.581318
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1

SM_Veh_Armored_Car_Wheel_rr
---------------------------

Position: X: 1.048778 Y: 0.6907741 Z: -1.581318
Rotation: X: 0 Y: 0 Z: 0 
Scale:    X: 1 Y: 1 Z: 1


-----------------------------------------------------------------------------------

Notes: Current Summary

-----------------------------------------------------------------------------------


Note: Ok, by now your vehicle heirarchy should look like this:

Mostly Collapsed:

Vehicle
  ArmoredTruck
    SM_Veh_Armored_Car_Glass_01
    SM_Veh_Armored_Car_SteeringW_01  
    WheelMeshes
    WheelColliders   
    View

Fully Expanded:

Vehicle
  ArmoredTruck
    SM_Veh_Armored_Car_Glass_01
    SM_Veh_Armored_Car_SteeringW_01
    WheelMeshes
      SM_Veh_Armored_Car_Wheel_fl
      SM_Veh_Armored_Car_Wheel_fr
      SM_Veh_Armored_Car_Wheel_rl
      SM_Veh_Armored_Car_Wheel_rr
    WheelColliders
      SM_Veh_Armored_Car_Wheel_fl
      SM_Veh_Armored_Car_Wheel_fr
      SM_Veh_Armored_Car_Wheel_rl
      SM_Veh_rmored_Car_Wheel_rr    
    View
      ArmoredTruckCamera


-----------------------------------------------------------------------------------

Step 12: Add to: ArmoredTruck (ArmoredTruckController.cs)

-----------------------------------------------------------------------------------


Attach component / script (ArmoredTruckController.cs) to "ArmoredTruck"

Adjust the following settings:

Require Components:
-------------------

Rigidbody: ArmoredTruck (Rigidbody)

Wheel Transforms:
-----------------

Front Left: SM_Veh_Armored_Car_Wheel_fl (Transform)
Front Right: SM_Veh_Armored_Car_Wheel_fr (Transform)
Rear Left: SM_Veh_Armored_Car_Wheel_rl (Transform)
Rear Right: SM_Veh_Armored_Car_Wheel_rr (Transform)

WheelColliders:
---------------

Front Left: SM_Veh_Armored_Car_Wheel_fl (Wheel Collider)
Front Right: SM_Veh_Armored_Car_Wheel_fr (Wheel Collider)
Rear Left: SM_Veh_Armored_Car_Wheel_rl (Wheel Collider)
Rear Right: SM_Veh_Armored_Car_Wheel_rr (Wheel Collider)

In Rigidbody:
-------------

Set Rigibody Mass: 3000

-----------------------------------------------------------------------------------

Step 13: Add to: ArmoredTruckCamera (ArmoredTruckTruckCamera.cs)

-----------------------------------------------------------------------------------


Attach component / script (ArmoredTruckCamera.cs) to "ArmoredTruckCamera"


Adjust Settings:

Transforms:
-----------

Armored Truck: ArmoredTruck (Transform)


-----------------------------------------------------------------------------------
